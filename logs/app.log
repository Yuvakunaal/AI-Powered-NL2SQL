2025-07-24 00:55:34,480 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 01:00:16,395 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 01:00:16,458 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 01:06:20,447 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 01:06:20,507 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 01:06:26,805 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int', 'gpa': 'float'}
2025-07-24 01:06:26,809 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int', 'gpa': 'float'}
2025-07-24 01:06:32,440 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 106, in query_table
    sql = await openrouter_client.generate_sql(prompt)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object str can't be used in 'await' expression
2025-07-24 01:11:49,131 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 01:11:54,815 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 01:11:54,877 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:00:06,098 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:00:06,189 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:02:12,470 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:02:12,528 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:02:42,472 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:02:42,518 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:04:59,531 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:04:59,591 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:05:04,715 - app.routers.schema - ERROR - Error dropping table 'students'
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/schema.py", line 110, in delete_table
    model = schema_cache.get_table_model(table_name)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'SchemaCache' object has no attribute 'get_table_model'. Did you mean: 'get_table_schema'?
2025-07-24 10:06:27,597 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:06:27,658 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:06:44,165 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int', 'gpa': 'float'}
2025-07-24 10:06:44,170 - app.db.dynamic_models - ERROR - Error creating table students: (sqlite3.OperationalError) index ix_students_id already exists
[SQL: CREATE INDEX ix_students_id ON students (id)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-24 10:06:44,170 - app.routers.create_table - ERROR - Error creating table
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: index ix_students_id already exists

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/create_table.py", line 108, in create_table
    model_class = create_dynamic_model(request.table_name, columns)
  File "/Applications/NL2SQL/app/db/dynamic_models.py", line 120, in create_dynamic_model
    model_class.__table__.create(bind=engine, checkfirst=True)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/schema.py", line 1288, in create
    bind._run_ddl_visitor(ddl.SchemaGenerator, self, checkfirst=checkfirst)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 3248, in _run_ddl_visitor
    conn._run_ddl_visitor(visitorcallable, element, **kwargs)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2455, in _run_ddl_visitor
    ).traverse_single(element)
      ~~~~~~~~~~~~~~~^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/visitors.py", line 664, in traverse_single
    return meth(obj, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py", line 1024, in visit_table
    self.traverse_single(index, create_ok=True)
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/visitors.py", line 664, in traverse_single
    return meth(obj, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py", line 1061, in visit_index
    CreateIndex(index)._invoke_with(self.connection)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py", line 321, in _invoke_with
    return bind.execute(self)
           ~~~~~~~~~~~~^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py", line 187, in _execute_on_connection
    return connection._execute_ddl(
           ~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1526, in _execute_ddl
    ret = self._execute_context(
        dialect,
    ...<4 lines>...
        compiled,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) index ix_students_id already exists
[SQL: CREATE INDEX ix_students_id ON students (id)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-24 10:08:34,176 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:08:34,234 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:08:58,036 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:08:58,095 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:27:59,779 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:28:00,057 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:31:42,290 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:31:42,348 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:31:59,337 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 10:31:59,895 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:31:59,952 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:32:14,198 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 10:32:14,764 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:32:14,825 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:32:26,551 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 10:32:27,097 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:32:45,598 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:33:49,231 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:37:36,407 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:37:44,484 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:37:46,090 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:37:47,522 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:37:47,588 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:43:32,806 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int'}
2025-07-24 10:51:17,407 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 10:51:17,977 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:51:18,037 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:51:26,628 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int'}
2025-07-24 10:52:14,352 - app.routers.query - ERROR - Error executing SQL query: Textual SQL expression 'SELECT * FROM students;' should be explicitly declared as text('SELECT * FROM students;')
2025-07-24 10:52:14,352 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 16, in execute_sql_query
    result = db.execute(sql, params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
    statement = coercions.expect(roles.StatementRole, statement)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
        element, argname=argname, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
    return self._text_coercion(element, argname, **kw)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
    return _no_text_coercion(element, argname)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
    raise exc_cls(
    ...<7 lines>...
    ) from err
sqlalchemy.exc.ArgumentError: Textual SQL expression 'SELECT * FROM students;' should be explicitly declared as text('SELECT * FROM students;')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 84, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: Textual SQL expression 'SELECT * FROM students;' should be explicitly declared as text('SELECT * FROM students;')
2025-07-24 10:53:20,008 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 10:53:20,580 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:53:21,882 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:53:21,940 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:53:38,180 - app.routers.query - ERROR - Error executing SQL query: name 'text' is not defined
2025-07-24 10:53:38,180 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 16, in execute_sql_query
    result = db.execute(text(sql), params or {})
                        ^^^^
NameError: name 'text' is not defined. Did you mean: 'next'?

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 84, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: name 'text' is not defined
2025-07-24 10:53:53,969 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 10:53:54,529 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:53:54,588 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:55:47,291 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int'}
2025-07-24 10:57:25,047 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int'}
2025-07-24 10:57:25,570 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int', 'gpa': 'float'}
2025-07-24 10:59:27,469 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 10:59:28,056 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:59:28,121 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:59:31,151 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 10:59:31,580 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:59:31,626 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:59:50,045 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 10:59:50,498 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 10:59:50,544 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 10:59:55,828 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int', 'gpa': 'float'}
2025-07-24 10:59:56,338 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int', 'gpa': 'float'}
2025-07-24 10:59:56,343 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int', 'gpa': 'float'}
2025-07-24 11:09:51,032 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:09:51,613 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:09:51,672 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:10:07,595 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int', 'gpa': 'float'}
2025-07-24 11:10:38,599 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'roll': 'int', 'name': 'text'}
2025-07-24 11:11:19,044 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'roll': 'int', 'name': 'text'}
2025-07-24 11:11:40,976 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'roll': 'int', 'name': 'text'}
2025-07-24 11:14:35,330 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:14:35,904 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:14:35,963 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:14:48,687 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:14:49,173 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:14:49,230 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:14:52,360 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:14:52,835 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:14:52,880 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:16:13,204 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'roll': 'int', 'name': 'text'}
2025-07-24 11:17:00,051 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'roll': 'int', 'name': 'text'}
2025-07-24 11:20:10,475 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:20:11,085 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:20:11,150 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:20:25,805 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:20:26,371 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:20:26,428 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:20:44,613 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:20:45,196 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:20:45,259 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:21:42,348 - app.db.dynamic_models - INFO - Created table: teachers with columns: {'id': 'int', 'name': 'text', 'branch': 'text'}
2025-07-24 11:22:14,688 - app.db.dynamic_models - INFO - Created table: teachers with columns: {'id': 'int', 'name': 'text', 'branch': 'text'}
2025-07-24 11:22:53,767 - app.db.dynamic_models - INFO - Created table: teachers with columns: {'id': 'int', 'name': 'text', 'branch': 'text'}
2025-07-24 11:40:06,588 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:40:07,525 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:40:07,785 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:42:56,863 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:42:57,467 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:42:57,529 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:43:50,465 - app.db.dynamic_models - INFO - Created table: colleges with columns: {'id': 'int', 'name': 'text', 'rank': 'int'}
2025-07-24 11:44:05,794 - app.routers.insert_data - ERROR - Error parsing CSV data: CSV data is empty
2025-07-24 11:49:54,026 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:49:54,760 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:49:54,825 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:50:33,229 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:50:33,818 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:50:33,879 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:52:53,218 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:52:53,866 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:52:53,934 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:53:28,994 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 11:53:29,594 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 11:53:29,653 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 11:54:30,927 - app.db.dynamic_models - INFO - Created table: products with columns: {'id': 'int', 'name': 'text', 'type': 'text'}
2025-07-24 12:01:42,445 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:01:43,051 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:01:43,111 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:02:49,392 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:02:49,969 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:02:50,028 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:04:03,096 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:04:03,699 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:04:03,759 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:04:05,579 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:04:06,064 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:04:06,111 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:04:32,671 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:04:33,253 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:04:33,311 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:06:45,960 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) near "GROUP": syntax error
[SQL: SELECT name, SUM(roll) as TotalRoll, GROUP BY name ORDER BY TotalRoll, roll ASC;

This query groups the students by name, calculates the total roll for each group, and orders the results by the total roll in ascending order and then by roll number.]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-24 12:06:45,960 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: near "GROUP": syntax error

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 17, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) near "GROUP": syntax error
[SQL: SELECT name, SUM(roll) as TotalRoll, GROUP BY name ORDER BY TotalRoll, roll ASC;

This query groups the students by name, calculates the total roll for each group, and orders the results by the total roll in ascending order and then by roll number.]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 23, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) near "GROUP": syntax error
[SQL: SELECT name, SUM(roll) as TotalRoll, GROUP BY name ORDER BY TotalRoll, roll ASC;

This query groups the students by name, calculates the total roll for each group, and orders the results by the total roll in ascending order and then by roll number.]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-24 12:08:11,394 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:08:12,001 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:08:12,058 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:09:36,825 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:09:37,429 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:09:37,489 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:09:51,111 - app.routers.insert_data - ERROR - Error parsing CSV data: CSV data is empty
2025-07-24 12:10:55,951 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:10:56,581 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:10:56,647 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:12:27,276 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:12:27,873 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:12:27,932 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:12:42,203 - app.routers.insert_data - ERROR - Error parsing CSV data: CSV data is empty
2025-07-24 12:18:30,133 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:18:30,747 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:18:30,806 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:19:21,929 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:19:22,549 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:19:22,608 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:20:53,447 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:20:54,059 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:20:54,118 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:21:55,851 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:21:56,451 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:21:56,511 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 12:22:21,258 - app.db.dynamic_models - INFO - Created table: products with columns: {'id': 'int', 'name': 'text', 'type': 'text'}
2025-07-24 12:22:58,711 - app.db.dynamic_models - INFO - Created table: products with columns: {'id': 'int', 'name': 'text', 'type': 'text'}
2025-07-24 12:23:10,515 - app.db.dynamic_models - INFO - Created table: products with columns: {'id': 'int', 'name': 'text', 'type': 'text'}
2025-07-24 12:23:26,362 - app.db.dynamic_models - INFO - Created table: products with columns: {'id': 'int', 'name': 'text', 'type': 'text'}
2025-07-24 12:23:46,763 - app.db.dynamic_models - INFO - Created table: products with columns: {'id': 'int', 'name': 'text', 'type': 'text'}
2025-07-24 12:24:46,097 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 12:24:46,737 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 12:24:46,808 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 13:12:58,305 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 13:13:06,637 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 13:13:06,714 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 13:14:22,307 - app.db.dynamic_models - INFO - Created table: colleges with columns: {'id': 'int', 'name': 'text', 'rank': 'int'}
2025-07-24 13:14:32,373 - app.db.dynamic_models - INFO - Created table: colleges with columns: {'id': 'int', 'name': 'text', 'rank': 'int'}
2025-07-24 13:14:43,649 - app.db.dynamic_models - INFO - Created table: colleges with columns: {'id': 'int', 'name': 'text', 'rank': 'int'}
2025-07-24 13:23:16,337 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:04:26,770 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:04:26,842 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:04:52,659 - app.db.dynamic_models - INFO - Created table: products with columns: {'id': 'int', 'name': 'text', 'type': 'text'}
2025-07-24 15:04:52,661 - app.routers.insert_data - ERROR - Error inserting data
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.IntegrityError: datatype mismatch

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/insert_data.py", line 92, in insert_data
    db.commit()
    ~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 1048, in _emit_insert_statements
    result = connection.execute(
        statement, multiparams, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) datatype mismatch
[SQL: INSERT INTO products (id, name, type) VALUES (?, ?, ?)]
[parameters: ('exit', None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-07-24 15:06:21,563 - app.db.dynamic_models - INFO - Created table: products with columns: {'id': 'int', 'name': 'text', 'type': 'text'}
2025-07-24 15:10:41,643 - app.db.dynamic_models - INFO - Created table: colleges with columns: {'id': 'int', 'name': 'text', 'rank': 'int'}
2025-07-24 15:13:16,412 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:15:28,697 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:15:28,769 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:18:40,631 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'text', 'name': 'text', 'dob': 'text'}
2025-07-24 15:18:49,990 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'text', 'name': 'text', 'dob': 'text'}
2025-07-24 15:18:49,994 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:21:18,126 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:21:18,128 - app.routers.insert_data - ERROR - Error inserting data
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
TypeError: SQLite DateTime type only accepts Python datetime and date objects as input.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/insert_data.py", line 92, in insert_data
    db.commit()
    ~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 1048, in _emit_insert_statements
    result = connection.execute(
        statement, multiparams, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1817, in _execute_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str(statement), parameters, None, None
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.
[SQL: INSERT INTO people (id, name, dob) VALUES (?, ?, ?)]
[parameters: [{'dob': '2005-03-31', 'id': '1', 'name': 'kunaal'}]]
2025-07-24 15:21:47,462 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:21:47,463 - app.routers.insert_data - ERROR - Error inserting data
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
TypeError: SQLite DateTime type only accepts Python datetime and date objects as input.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/insert_data.py", line 92, in insert_data
    db.commit()
    ~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 1048, in _emit_insert_statements
    result = connection.execute(
        statement, multiparams, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1817, in _execute_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str(statement), parameters, None, None
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.
[SQL: INSERT INTO people (id, name, dob) VALUES (?, ?, ?)]
[parameters: [{'dob': '2005-03-31 00:00:00', 'id': '1', 'name': 'kunaal'}]]
2025-07-24 15:21:56,161 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:21:56,163 - app.routers.insert_data - ERROR - Error inserting data
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
TypeError: SQLite DateTime type only accepts Python datetime and date objects as input.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/insert_data.py", line 92, in insert_data
    db.commit()
    ~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 1048, in _emit_insert_statements
    result = connection.execute(
        statement, multiparams, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1817, in _execute_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str(statement), parameters, None, None
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.
[SQL: INSERT INTO people (id, name, dob) VALUES (?, ?, ?)]
[parameters: [{'dob': '2005-03-31T00:00:00', 'id': '1', 'name': 'kunaal'}]]
2025-07-24 15:24:57,242 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:24:57,996 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:24:58,064 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:25:34,754 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:25:35,371 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:25:35,435 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:25:43,009 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:25:45,013 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:25:45,076 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:26:17,802 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:26:17,802 - app.routers.insert_data - ERROR - Error inserting row {'id': '1', 'name': 'kunaal', 'dob': '2005-03-31'}: string indices must be integers, not 'str'
2025-07-24 15:26:43,806 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:26:43,806 - app.routers.insert_data - ERROR - Error inserting row {'id': '2', 'name': 'Saiyuva', 'dob': '2005-02-24'}: string indices must be integers, not 'str'
2025-07-24 15:27:01,029 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) no such function: CURDATE
[SQL: SELECT name FROM people WHERE DATEDIFF(CURDATE(), dob) < YEAR(CURDATE());]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-24 15:27:01,029 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such function: CURDATE

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 17, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such function: CURDATE
[SQL: SELECT name FROM people WHERE DATEDIFF(CURDATE(), dob) < YEAR(CURDATE());]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 23, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) no such function: CURDATE
[SQL: SELECT name FROM people WHERE DATEDIFF(CURDATE(), dob) < YEAR(CURDATE());]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-24 15:27:18,251 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT MIN(dob) FROM people;
SELECT name FROM people WHERE dob = (SELECT MIN(dob) FROM people);]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-24 15:27:18,252 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.ProgrammingError: You can only execute one statement at a time.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 17, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT MIN(dob) FROM people;
SELECT name FROM people WHERE dob = (SELECT MIN(dob) FROM people);]
(Background on this error at: https://sqlalche.me/e/20/f405)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 23, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT MIN(dob) FROM people;
SELECT name FROM people WHERE dob = (SELECT MIN(dob) FROM people);]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-24 15:29:28,446 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:29:28,446 - app.routers.insert_data - ERROR - Error inserting row {'id': '1', 'name': 'kunaal', 'dob': '2005-02-24T00:00:00'}: string indices must be integers, not 'str'
2025-07-24 15:31:03,060 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:31:03,696 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:31:07,591 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:31:07,640 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:31:24,357 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:31:24,359 - app.routers.insert_data - ERROR - Error inserting data
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
TypeError: SQLite DateTime type only accepts Python datetime and date objects as input.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/insert_data.py", line 108, in insert_data
    db.commit()
    ~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 1048, in _emit_insert_statements
    result = connection.execute(
        statement, multiparams, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1817, in _execute_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str(statement), parameters, None, None
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.
[SQL: INSERT INTO people (id, name, dob) VALUES (?, ?, ?)]
[parameters: [{'id': '1', 'dob': '2005-03-31', 'name': 'kunaal'}]]
2025-07-24 15:31:36,999 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:31:37,000 - app.routers.insert_data - ERROR - Error inserting data
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
TypeError: SQLite DateTime type only accepts Python datetime and date objects as input.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/insert_data.py", line 108, in insert_data
    db.commit()
    ~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 1048, in _emit_insert_statements
    result = connection.execute(
        statement, multiparams, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1817, in _execute_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str(statement), parameters, None, None
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.
[SQL: INSERT INTO people (id, name, dob) VALUES (?, ?, ?)]
[parameters: [{'id': '1', 'dob': '2005-03-31T00:00:00', 'name': 'kunaal'}]]
2025-07-24 15:32:21,611 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:32:22,304 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:32:23,301 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:32:29,743 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:32:29,794 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:32:34,237 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:32:34,766 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:32:34,813 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:33:00,158 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:33:00,790 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:33:00,854 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:33:14,647 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:33:14,647 - app.routers.insert_data - INFO - Inserting row: {'id': '1', 'name': 'kunaal', 'dob': '2005-03-31'}
2025-07-24 15:33:14,649 - app.routers.insert_data - ERROR - Error inserting data
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
TypeError: SQLite DateTime type only accepts Python datetime and date objects as input.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/insert_data.py", line 116, in insert_data
    db.commit()
    ~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 1048, in _emit_insert_statements
    result = connection.execute(
        statement, multiparams, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1817, in _execute_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str(statement), parameters, None, None
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.
[SQL: INSERT INTO people (id, name, dob) VALUES (?, ?, ?)]
[parameters: [{'dob': '2005-03-31', 'id': '1', 'name': 'kunaal'}]]
2025-07-24 15:34:33,517 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:34:34,203 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:34:40,542 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:34:40,604 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:34:58,650 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:34:58,650 - app.routers.insert_data - INFO - Final clean row: {'id': '1', 'name': 'kunaal', 'dob': '2005-03-31'}
2025-07-24 15:34:58,652 - app.routers.insert_data - ERROR - Error inserting data
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
TypeError: SQLite DateTime type only accepts Python datetime and date objects as input.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/insert_data.py", line 118, in insert_data
    db.commit()
    ~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 1048, in _emit_insert_statements
    result = connection.execute(
        statement, multiparams, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1817, in _execute_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str(statement), parameters, None, None
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.
[SQL: INSERT INTO people (id, name, dob) VALUES (?, ?, ?)]
[parameters: [{'id': '1', 'name': 'kunaal', 'dob': '2005-03-31'}]]
2025-07-24 15:36:10,707 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:36:10,708 - app.routers.insert_data - ERROR - Error inserting row {'id': '1', 'name': 'kunaal', 'dob': 'date(2005', None: ['3', '31)']}: expected string or bytes-like object, got 'NoneType'
2025-07-24 15:37:49,185 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:37:49,966 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:37:54,605 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:37:54,654 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:38:29,626 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:38:29,627 - app.routers.insert_data - ERROR - Error inserting row {'id': '1', 'name': 'kunaal', 'dob': 'date(2005', None: ['3', '31)']}: Invalid isoformat string: 'date(2005'
2025-07-24 15:39:45,286 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:39:46,004 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:39:50,637 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:39:50,686 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:40:26,626 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:40:26,626 - app.routers.insert_data - WARNING - Could not parse DOB '2005-3-31': Invalid isoformat string: '2005-3-31'
2025-07-24 15:40:26,629 - app.routers.insert_data - ERROR - Error inserting data
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
TypeError: SQLite DateTime type only accepts Python datetime and date objects as input.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/insert_data.py", line 104, in insert_data
    db.commit()
    ~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py", line 1048, in _emit_insert_statements
    result = connection.execute(
        statement, multiparams, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1817, in _execute_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str(statement), parameters, None, None
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1811, in _execute_context
    context = constructor(
        dialect, self, conn, execution_options, *args, **kw
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 1485, in _init_compiled
    flattened_processors[key](compiled_params[key])
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/base.py", line 1187, in process
    raise TypeError(
    ...<2 lines>...
    )
sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.
[SQL: INSERT INTO people (id, name, dob) VALUES (?, ?, ?)]
[parameters: [{'dob': '2005-3-31', 'id': '1', 'name': 'kunaak'}]]
2025-07-24 15:40:29,705 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:41:16,083 - app.db.dynamic_models - INFO - Created table: people with columns: {'id': 'int', 'name': 'text', 'dob': 'datetime'}
2025-07-24 15:41:30,143 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) no such function: CURDATE
[SQL: SELECT name FROM people WHERE dob > CURDATE();]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-24 15:41:30,143 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such function: CURDATE

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 17, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such function: CURDATE
[SQL: SELECT name FROM people WHERE dob > CURDATE();]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 23, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) no such function: CURDATE
[SQL: SELECT name FROM people WHERE dob > CURDATE();]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-24 15:42:14,512 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:42:15,142 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:42:15,214 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:42:18,646 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:42:19,100 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:42:19,148 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:42:47,510 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:42:48,222 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:42:48,296 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:44:13,117 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) near "'18 years'": syntax error
[SQL: SELECT name FROM people WHERE dob >= DATE('now') - INTERVAL '18 years';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-24 15:44:13,117 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: near "'18 years'": syntax error

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 17, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) near "'18 years'": syntax error
[SQL: SELECT name FROM people WHERE dob >= DATE('now') - INTERVAL '18 years';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 23, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) near "'18 years'": syntax error
[SQL: SELECT name FROM people WHERE dob >= DATE('now') - INTERVAL '18 years';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-24 15:45:10,447 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:45:11,079 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:45:17,174 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:45:17,240 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:45:17,847 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:45:18,299 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:45:21,917 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:45:26,792 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:45:29,678 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:45:32,078 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:45:32,138 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:45:34,564 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:45:35,002 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:45:35,050 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:45:39,698 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:45:40,134 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:45:40,182 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:46:14,016 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:46:14,719 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:46:14,784 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:47:30,820 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT * FROM people;

This query will return all records from the 'people' table. If you want to filter the results based on the age (18 years old or older), you can use the following query:

SELECT * FROM people WHERE DATE('now') - dob >= DATE('now', '-18 years');]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-24 15:47:30,820 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.ProgrammingError: You can only execute one statement at a time.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 17, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT * FROM people;

This query will return all records from the 'people' table. If you want to filter the results based on the age (18 years old or older), you can use the following query:

SELECT * FROM people WHERE DATE('now') - dob >= DATE('now', '-18 years');]
(Background on this error at: https://sqlalche.me/e/20/f405)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 23, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT * FROM people;

This query will return all records from the 'people' table. If you want to filter the results based on the age (18 years old or older), you can use the following query:

SELECT * FROM people WHERE DATE('now') - dob >= DATE('now', '-18 years');]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-24 15:48:01,879 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:48:02,613 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:48:02,680 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:48:03,691 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:48:04,143 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:48:04,192 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:48:17,832 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:48:18,419 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:48:18,483 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:48:30,788 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 15:48:31,568 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 15:48:31,633 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 15:54:23,024 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'roll': 'int', 'name': 'text'}
2025-07-24 15:54:23,032 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 15:54:56,839 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 15:55:18,452 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 15:55:48,483 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 15:56:10,257 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 15:56:35,400 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 15:57:04,125 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 15:57:25,080 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 15:57:50,425 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:05:53,666 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 16:05:54,550 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 16:05:54,622 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 16:05:57,859 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 16:05:58,316 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 16:05:58,369 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 16:20:52,962 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 16:20:53,788 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 16:20:59,605 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 16:20:59,671 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 16:21:39,539 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:22:26,753 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:22:26,764 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:22:31,290 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:23:40,923 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:23:59,213 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:24:17,928 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:26:08,633 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:26:30,006 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:26:48,040 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 16:27:11,920 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-24 18:15:50,120 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-24 21:07:32,007 - app.db.dynamic_models - INFO - Database initialized
2025-07-24 21:07:32,082 - root - INFO - NL2SQL Playground API is starting up...
2025-07-24 21:08:27,792 - app.db.dynamic_models - INFO - Created table: users with columns: {'id': 'int', 'username': 'text'}
2025-07-24 21:08:56,382 - app.db.dynamic_models - INFO - Created table: users with columns: {'id': 'int', 'username': 'text'}
2025-07-24 21:09:02,278 - app.db.dynamic_models - INFO - Created table: users with columns: {'id': 'int', 'username': 'text'}
2025-07-24 21:09:09,185 - app.db.dynamic_models - INFO - Created table: users with columns: {'id': 'int', 'username': 'text'}
2025-07-24 21:11:57,790 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:43:32,377 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:43:32,895 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:46:35,639 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) no such function: LEN
[SQL: SELECT LEN(DISTINCT MAJOR) AS length, MAJOR FROM students;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 22:46:35,639 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such function: LEN

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 17, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such function: LEN
[SQL: SELECT LEN(DISTINCT MAJOR) AS length, MAJOR FROM students;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 23, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) no such function: LEN
[SQL: SELECT LEN(DISTINCT MAJOR) AS length, MAJOR FROM students;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 22:48:35,961 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) no such function: RIGHT
[SQL: SELECT * FROM students WHERE LENGTH(FIRST_NAME) = 5 AND RIGHT(FIRST_NAME, 1) = 'a';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 22:48:35,962 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such function: RIGHT

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 17, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such function: RIGHT
[SQL: SELECT * FROM students WHERE LENGTH(FIRST_NAME) = 5 AND RIGHT(FIRST_NAME, 1) = 'a';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 23, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) no such function: RIGHT
[SQL: SELECT * FROM students WHERE LENGTH(FIRST_NAME) = 5 AND RIGHT(FIRST_NAME, 1) = 'a';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 22:48:50,077 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) no such function: RIGHT
[SQL: SELECT * FROM students WHERE LENGTH(FIRST_NAME) = 5 AND RIGHT(FIRST_NAME, 1) = 'a';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 22:48:50,077 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such function: RIGHT

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 17, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such function: RIGHT
[SQL: SELECT * FROM students WHERE LENGTH(FIRST_NAME) = 5 AND RIGHT(FIRST_NAME, 1) = 'a';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 23, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) no such function: RIGHT
[SQL: SELECT * FROM students WHERE LENGTH(FIRST_NAME) = 5 AND RIGHT(FIRST_NAME, 1) = 'a';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 22:50:04,374 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:50:05,164 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:50:10,631 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:50:10,710 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:50:37,178 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:50:38,005 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:50:38,090 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:50:56,377 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:50:57,008 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:50:57,070 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:52:11,007 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:52:11,756 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:52:24,401 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:52:45,474 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:52:48,144 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:52:50,915 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:52:52,127 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:52:52,192 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:53:26,545 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:53:27,265 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:53:27,339 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:53:28,857 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:53:29,438 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:53:29,493 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:53:38,785 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:53:39,556 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:53:39,619 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:54:33,087 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:54:33,762 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:54:33,825 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:54:38,070 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:54:38,525 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:54:38,575 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:54:58,166 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 22:54:59,746 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 22:54:59,808 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 22:56:29,313 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 44, in query_table
    table_names = request.table_names or ([request.table_name] if request.table_name else [])
                  ^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/pydantic/main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'QueryRequest' object has no attribute 'table_names'
2025-07-25 23:01:12,153 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:01:13,057 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:01:13,130 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:01:36,187 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:01:36,925 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:01:36,999 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:04:27,168 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:04:28,179 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:04:28,265 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:04:30,898 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:04:31,801 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:04:31,863 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:04:47,332 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:04:48,022 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:04:48,089 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:04:53,949 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:04:54,677 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:04:54,740 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:05:47,840 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:05:49,083 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:05:49,191 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:05:51,617 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:05:52,078 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:05:52,127 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:05:57,076 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:05:57,882 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:05:57,951 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:06:21,184 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:06:22,485 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:06:22,558 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:07:10,722 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 44, in query_table
    table_names = request.table_names or ([request.table_name] if request.table_name else [])
                  ^^^^^^^^^^^^^^^^^^^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/pydantic/main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'QueryRequest' object has no attribute 'table_names'
2025-07-25 23:08:29,055 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:08:30,632 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:08:32,003 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:08:32,074 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:09:24,516 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.id, users.username, products.id AS product_id, products.name, products.type
FROM users
LEFT OUTER JOIN products ON users.id = products.id;

This query will return all rows from the users table and matching rows from the products table, with null values in the products columns for any user who does not have a corresponding product.]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-25 23:09:24,516 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.ProgrammingError: You can only execute one statement at a time.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 19, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.id, users.username, products.id AS product_id, products.name, products.type
FROM users
LEFT OUTER JOIN products ON users.id = products.id;

This query will return all rows from the users table and matching rows from the products table, with null values in the products columns for any user who does not have a corresponding product.]
(Background on this error at: https://sqlalche.me/e/20/f405)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 78, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 25, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.id, users.username, products.id AS product_id, products.name, products.type
FROM users
LEFT OUTER JOIN products ON users.id = products.id;

This query will return all rows from the users table and matching rows from the products table, with null values in the products columns for any user who does not have a corresponding product.]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-25 23:09:43,252 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.username, products.name FROM users INNER JOIN products;

In this case, since there are no foreign keys or relationships defined between the users and products tables, a simple INNER JOIN is used to combine rows from both tables based on common columns (if any). However, in this scenario, there are no common columns to join on, so I've assumed that no foreign keys or relationships exist between the tables.]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-25 23:09:43,252 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.ProgrammingError: You can only execute one statement at a time.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 19, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.username, products.name FROM users INNER JOIN products;

In this case, since there are no foreign keys or relationships defined between the users and products tables, a simple INNER JOIN is used to combine rows from both tables based on common columns (if any). However, in this scenario, there are no common columns to join on, so I've assumed that no foreign keys or relationships exist between the tables.]
(Background on this error at: https://sqlalche.me/e/20/f405)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 78, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 25, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.username, products.name FROM users INNER JOIN products;

In this case, since there are no foreign keys or relationships defined between the users and products tables, a simple INNER JOIN is used to combine rows from both tables based on common columns (if any). However, in this scenario, there are no common columns to join on, so I've assumed that no foreign keys or relationships exist between the tables.]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-25 23:09:52,261 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.id, users.username, products.id, products.name, products.type
FROM users
JOIN products ON users.id = products.id;

Since there are no foreign keys defined in the given schema, the JOIN statement above is not based on any foreign key relationship. It simply joins the users and products tables based on the common id column.]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-25 23:09:52,261 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.ProgrammingError: You can only execute one statement at a time.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 19, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.id, users.username, products.id, products.name, products.type
FROM users
JOIN products ON users.id = products.id;

Since there are no foreign keys defined in the given schema, the JOIN statement above is not based on any foreign key relationship. It simply joins the users and products tables based on the common id column.]
(Background on this error at: https://sqlalche.me/e/20/f405)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 78, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 25, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.id, users.username, products.id, products.name, products.type
FROM users
JOIN products ON users.id = products.id;

Since there are no foreign keys defined in the given schema, the JOIN statement above is not based on any foreign key relationship. It simply joins the users and products tables based on the common id column.]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-25 23:10:20,626 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.username, products.name
FROM users
JOIN products ON users.id = products.id;

This query will join the users and products tables on the id column, returning the username and name of each row where the id matches in both tables. Since there are no foreign keys defined in the schema, this query does not use foreign keys.]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-25 23:10:20,626 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.ProgrammingError: You can only execute one statement at a time.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 19, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.username, products.name
FROM users
JOIN products ON users.id = products.id;

This query will join the users and products tables on the id column, returning the username and name of each row where the id matches in both tables. Since there are no foreign keys defined in the schema, this query does not use foreign keys.]
(Background on this error at: https://sqlalche.me/e/20/f405)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 78, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 25, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.ProgrammingError) You can only execute one statement at a time.
[SQL: SELECT users.username, products.name
FROM users
JOIN products ON users.id = products.id;

This query will join the users and products tables on the id column, returning the username and name of each row where the id matches in both tables. Since there are no foreign keys defined in the schema, this query does not use foreign keys.]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-07-25 23:15:24,737 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:15:25,613 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:15:31,814 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:15:32,853 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:15:34,007 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:15:36,108 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:15:37,258 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:15:37,330 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:15:50,971 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:15:51,554 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:15:51,615 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:15:55,051 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:15:55,498 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:15:55,549 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:15:57,977 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:15:58,468 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:15:58,520 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:15:59,734 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:16:00,227 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:16:00,308 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:16:01,115 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:16:01,600 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:16:01,649 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:16:02,458 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:16:02,905 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:16:02,955 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:16:07,499 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:16:08,530 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:16:08,579 - root - INFO - NL2SQL Playground API is starting up...
2025-07-25 23:21:33,471 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) no such table: scholarships
[SQL: SELECT students.STUDENT_ID, students.FIRST_NAME, students.LAST_NAME, students.GPA, students.MAJOR, scholarships.SCHOLARSHIP_AMOUNT
FROM students
LEFT JOIN scholarships ON students.STUDENT_ID = scholarships.STUDENT_ID;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 23:21:33,471 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: scholarships

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 56, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: scholarships
[SQL: SELECT students.STUDENT_ID, students.FIRST_NAME, students.LAST_NAME, students.GPA, students.MAJOR, scholarships.SCHOLARSHIP_AMOUNT
FROM students
LEFT JOIN scholarships ON students.STUDENT_ID = scholarships.STUDENT_ID;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 118, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 62, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) no such table: scholarships
[SQL: SELECT students.STUDENT_ID, students.FIRST_NAME, students.LAST_NAME, students.GPA, students.MAJOR, scholarships.SCHOLARSHIP_AMOUNT
FROM students
LEFT JOIN scholarships ON students.STUDENT_ID = scholarships.STUDENT_ID;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 23:22:03,229 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:23:26,861 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 115, in query_table
    sql = extract_sql_statement(sql_raw)
  File "/Applications/NL2SQL/app/routers/query.py", line 51, in extract_sql_statement
    sql_stmt = text_out.split('\n\n', 1).strip()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'strip'
2025-07-25 23:23:32,010 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) misuse of aggregate: AVG()
[SQL: SELECT AVG(GPA) AS fifth_highest_GPA
FROM (
  SELECT GPA, ROW_NUMBER() OVER (ORDER BY GPA DESC) as rn
  FROM students
  WHERE GPA NOT IN (
    SELECT AVG(GPA)
    FROM (
      SELECT AVG(GPA) AS avg_GPA
      FROM students
      GROUP BY MAJOR
      HAVING COUNT(*) >= 5
    )
  )
) subquery
WHERE subquery.rn = 5;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 23:23:32,011 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: misuse of aggregate: AVG()

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 56, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) misuse of aggregate: AVG()
[SQL: SELECT AVG(GPA) AS fifth_highest_GPA
FROM (
  SELECT GPA, ROW_NUMBER() OVER (ORDER BY GPA DESC) as rn
  FROM students
  WHERE GPA NOT IN (
    SELECT AVG(GPA)
    FROM (
      SELECT AVG(GPA) AS avg_GPA
      FROM students
      GROUP BY MAJOR
      HAVING COUNT(*) >= 5
    )
  )
) subquery
WHERE subquery.rn = 5;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 118, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 62, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) misuse of aggregate: AVG()
[SQL: SELECT AVG(GPA) AS fifth_highest_GPA
FROM (
  SELECT GPA, ROW_NUMBER() OVER (ORDER BY GPA DESC) as rn
  FROM students
  WHERE GPA NOT IN (
    SELECT AVG(GPA)
    FROM (
      SELECT AVG(GPA) AS avg_GPA
      FROM students
      GROUP BY MAJOR
      HAVING COUNT(*) >= 5
    )
  )
) subquery
WHERE subquery.rn = 5;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 23:23:43,402 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) no such column: any_other_student_id
[SQL: SELECT * FROM students WHERE GPA = (SELECT GPA FROM students WHERE STUDENT_ID = any_other_student_id);]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 23:23:43,403 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such column: any_other_student_id

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 56, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: any_other_student_id
[SQL: SELECT * FROM students WHERE GPA = (SELECT GPA FROM students WHERE STUDENT_ID = any_other_student_id);]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 118, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 62, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) no such column: any_other_student_id
[SQL: SELECT * FROM students WHERE GPA = (SELECT GPA FROM students WHERE STUDENT_ID = any_other_student_id);]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 23:24:04,377 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) near "SELECT": syntax error
[SQL: SELECT * FROM students WHERE GPA = (SELECT GPA FROM students WHERE STUDENT_ID = ANY(SELECT STUDENT_ID FROM students WHERE GPA = s.GPA));]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 23:24:04,377 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: near "SELECT": syntax error

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 56, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) near "SELECT": syntax error
[SQL: SELECT * FROM students WHERE GPA = (SELECT GPA FROM students WHERE STUDENT_ID = ANY(SELECT STUDENT_ID FROM students WHERE GPA = s.GPA));]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 118, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 62, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) near "SELECT": syntax error
[SQL: SELECT * FROM students WHERE GPA = (SELECT GPA FROM students WHERE STUDENT_ID = ANY(SELECT STUDENT_ID FROM students WHERE GPA = s.GPA));]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-25 23:25:24,343 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:25:51,024 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 115, in query_table
    sql = extract_sql_statement(sql_raw)
  File "/Applications/NL2SQL/app/routers/query.py", line 51, in extract_sql_statement
    sql_stmt = text_out.split('\n\n', 1).strip()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'strip'
2025-07-25 23:25:56,359 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:26:03,131 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:26:15,323 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:26:31,622 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:27:01,009 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:28:21,250 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:28:45,563 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:29:10,650 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:29:35,026 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:29:43,660 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:31:30,037 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:31:50,577 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:32:00,656 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:32:10,489 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:32:26,870 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:32:52,575 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:32:59,227 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 115, in query_table
    sql = extract_sql_statement(sql_raw)
  File "/Applications/NL2SQL/app/routers/query.py", line 51, in extract_sql_statement
    sql_stmt = text_out.split('\n\n', 1).strip()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'strip'
2025-07-25 23:33:21,219 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:33:50,075 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:34:18,951 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:34:34,335 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 117, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-25 23:37:42,789 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-25 23:37:43,798 - app.db.dynamic_models - INFO - Database initialized
2025-07-25 23:37:43,868 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:08:28,641 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:08:29,571 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:08:29,644 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:09:21,259 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:09:21,954 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:09:25,021 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:09:31,538 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:09:31,601 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:11:14,307 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:11:15,220 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:11:15,323 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:11:35,486 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:11:37,130 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:11:37,191 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:15:03,967 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:15:04,816 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:15:04,895 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:20:44,701 - app.db.dynamic_models - INFO - Created table: students with columns: {'STUDENT_ID': 'int', 'FIRST_NAME': 'text', 'LAST_NAME': 'text', 'GPA': 'float', 'MAJOR': 'text'}
2025-07-26 00:20:45,238 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int', 'gpa': 'float'}
2025-07-26 00:20:45,261 - app.db.dynamic_models - INFO - Created table: students with columns: {'id': 'int', 'name': 'text', 'age': 'int', 'gpa': 'float'}
2025-07-26 00:27:42,872 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:27:46,163 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:27:46,450 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:29:10,395 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:29:12,593 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:29:12,791 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:32:08,068 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:32:10,865 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:32:12,919 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:32:13,069 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:32:18,633 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:32:19,468 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:32:19,658 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:32:24,845 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:32:25,614 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:32:26,101 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:37:35,593 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:37:38,825 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:37:39,000 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:38:38,426 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:38:41,311 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:38:41,986 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:38:43,902 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:38:43,961 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:40:15,478 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:40:17,689 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:40:17,852 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:41:16,310 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:41:18,464 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:41:18,551 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:42:19,373 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 143, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 00:42:30,467 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 143, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 22, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 00:43:40,229 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:43:41,924 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:43:42,051 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:47:23,716 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:47:24,666 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:48:11,797 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:48:40,590 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:49:04,001 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:49:04,942 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:49:07,833 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:49:09,486 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:49:10,676 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:49:12,291 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:49:12,371 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:50:10,385 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:50:11,137 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:50:11,222 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:50:42,666 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:50:45,250 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:50:45,320 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:51:52,961 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:51:54,269 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:51:54,389 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:51:56,484 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:51:57,145 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:51:57,207 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:52:20,250 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:52:20,938 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:52:21,006 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:53:52,767 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:53:53,844 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:53:53,937 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:53:56,666 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:53:57,320 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:53:57,462 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:55:57,708 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:55:58,852 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:55:58,989 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:56:01,619 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:56:02,125 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:56:02,174 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:58:33,536 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:58:34,183 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:58:34,254 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:59:14,481 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:59:15,103 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:59:15,168 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:59:29,916 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 00:59:31,429 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 00:59:31,492 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 00:59:48,924 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT * FROM products;\n\nExplanation: Since the question asks for all products, we need to select all records from the products table. The '*' symbol selects all columns, and the 'FROM' keyword specifies the table we are selecting from."
2025-07-26 01:01:35,068 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 01:01:35,770 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:01:35,839 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 01:03:26,496 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 01:03:27,168 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:03:27,232 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 01:03:39,055 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 01:03:40,377 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:03:40,438 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 01:04:05,438 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;\n\nExplanation: To get all products, we need to select all records from the products table. The SQL query above does exactly that.'
2025-07-26 01:04:05,438 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 141, in query_table
    sql = extract_sql_statement(sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 41, in extract_sql_statement
    sql_stmt = text_out.split('\n\n').strip()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'strip'
2025-07-26 01:04:11,363 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;'
2025-07-26 01:04:16,793 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;\n\nExplanation: To answer the question "give all products", we need to select all records from the products table. The SQL query will be a simple SELECT statement that selects all columns (*) from the products table.'
2025-07-26 01:04:16,793 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 141, in query_table
    sql = extract_sql_statement(sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 41, in extract_sql_statement
    sql_stmt = text_out.split('\n\n').strip()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'strip'
2025-07-26 01:08:07,268 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 01:08:08,050 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:08:10,612 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:08:10,679 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 01:08:13,616 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 01:08:14,095 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:08:14,150 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 01:08:26,587 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 01:08:27,704 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:08:27,755 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 01:08:45,727 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;'
2025-07-26 01:08:50,027 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;\n\nExplanation: Since the question asks for all products, we need to select all columns from the products table. The SQL query is straightforward as there are no relationships and we are not filtering or sorting the results.'
2025-07-26 01:08:50,027 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 141, in query_table
    sql = extract_sql_statement(sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 41, in extract_sql_statement
    sql_stmt = text_out.split('\n\n').strip()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'strip'
2025-07-26 01:09:47,369 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 01:09:48,021 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:09:48,145 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 01:09:48,449 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 01:09:48,908 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:09:48,958 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 01:10:10,478 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 01:10:12,118 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:10:12,180 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 01:10:31,506 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;\n\nExplanation: Since the question asks for all products, we need to select all columns from the products table. The FROM clause specifies the table we are selecting data from, which in this case is the products table.'
2025-07-26 01:11:11,981 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT users.id, users.username, products.id, products.name\nFROM users\nJOIN products;\n\nExplanation:\n1. The question asks for all users and products. Since there is no relationship between the users and products tables, we need to join them to achieve this.\n2. The SELECT statement lists the columns we want to retrieve from the users and products tables.\n3. The FROM clause specifies the tables we are querying.\n4. The JOIN keyword is used to combine rows from two or more tables, based on a related column between them. Since there is no relationship defined in the schema, we can use a CARTESIAN JOIN, which returns the cross product of the two tables. However, in this case, it's more efficient to explicitly specify the join condition to avoid the Cartesian product.\n5. The JOIN condition is not provided in the schema, so we assume that there is no specific condition and join the tables on their primary keys (id).\n6. The semicolon at the end of the query indicates the end of the SQL statement."
2025-07-26 01:11:11,981 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 142, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 20, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 01:11:25,885 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT users.id AS user_id, users.username AS user_name, products.id AS product_id, products.name AS product_name\nFROM users\nJOIN products;\n\nExplanation:\n1. To answer the question "write SQLite query give all users and products using Join", we first identify the tables involved: users and products.\n2. Since the question asks for all records from both tables, we use a JOIN operation to combine the records from both tables.\n3. We then specify the columns we want to select from each table, using the AS keyword to rename the columns for clarity.\n4. Finally, we write the SQL query using the JOIN operation and the specified columns.'
2025-07-26 01:11:25,887 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 142, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 20, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 01:11:39,954 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT users.username, products.name\nFROM users\nLEFT JOIN products;\n\nExplanation:\n1. The question asks for a left join between the users and products tables. A left join returns all records from the left table (users in this case) and the matched records from the right table (products). If there is no match, the result is NULL on the right side.\n2. The query selects the username from the users table and the name from the products table.\n3. The FROM clause specifies the tables involved in the join, and the LEFT JOIN keyword is used to perform the left join operation.'
2025-07-26 01:12:15,341 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT users.username, products.name FROM users INNER JOIN products;'
2025-07-26 01:13:32,870 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 01:13:33,500 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 01:13:33,562 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 01:13:58,068 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT users.username, products.name\nFROM users\nLEFT JOIN products;\n\nExplanation:\n1. The question asks for a left join operation between the users and products tables.\n2. To perform a left join, we need to specify the tables involved and the columns to be selected from each table.\n3. In this case, we want to select the username column from the users table and the name column from the products table.\n4. Since the question does not specify any conditions for the join, we use a simple left join operation.\n5. The FROM clause specifies the tables involved in the join, and the SELECT clause specifies the columns to be returned.'
2025-07-26 01:14:50,547 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT users.username, products.name\nFROM users\nLEFT JOIN products ON users.id = products.id;\n\nExplanation:\n1. The question asks for a left join between the `users` and `products` tables on their respective `id` columns.\n2. A left join will return all rows from the left table (`users` in this case) and the matched rows from the right table (`products`). If there is no match, the right table will return NULL values.\n3. The `SELECT` statement selects the `username` from the `users` table and the `name` from the `products` table.\n4. The `FROM` clause specifies the tables involved in the join operation.\n5. The `LEFT JOIN` keyword is used to include all rows from the left table (`users`) and the matched rows from the right table (`products`).\n6. The `ON` clause specifies the condition for the join operation, which is that the `id` in both tables should match.'
2025-07-26 01:15:13,211 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT users.username, products.name\nFROM users\nLEFT JOIN products\nON users.id = products.id;\n\nExplanation:\n1. The question asks for a left join between the users and products tables on their respective id columns.\n2. A left join will return all records from the left table (users) and the matched records from the right table (products). If there is no match, the right table's columns will be null.\n3. The SELECT statement selects the username from the users table and the name from the products table.\n4. The FROM clause specifies the tables involved in the join.\n5. The LEFT JOIN keyword is used to perform the left join operation.\n6. The ON clause defines the condition for the join, which is the id column in both tables."
2025-07-26 01:15:29,873 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 11:42:46,657 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:42:46,757 - faiss.loader - INFO - Loading faiss.
2025-07-26 11:42:47,278 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 11:42:47,280 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 11:43:18,453 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 11:43:18,454 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 11:43:28,188 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 11:44:09,608 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM students;\n\nExplanation: To display all the students, we need to select all columns (*) from the students table. The FROM keyword is used to specify the table name (students).'
2025-07-26 11:44:13,674 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:44:15,544 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:44:27,258 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT * FROM students WHERE name = 'Alice';\n\nExplanation:\n1. The question asks for all students with the name 'Alice'.\n2. To achieve this in SQLite, we use the SELECT statement to retrieve data from the students table.\n3. We filter the results using the WHERE clause, specifying that we want rows where the name column is equal to 'Alice'.\n4. The asterisk (*) in the SELECT statement is used to select all columns from the students table.\n5. The resulting SQL query will return all rows from the students table where the name is 'Alice'."
2025-07-26 11:44:27,259 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 152, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 11:44:40,124 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT * FROM students WHERE name = 'Alice';\n\nExplanation:\n1. The question asks for all students with a name of 'Alice'.\n2. To achieve this, we need to select all columns from the students table where the name column matches 'Alice'.\n3. Therefore, the SQL query is SELECT * FROM students WHERE name = 'Alice'."
2025-07-26 11:44:40,125 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 152, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 11:44:45,827 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT * FROM students WHERE name = 'Alice';"
2025-07-26 11:44:48,189 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:44:49,447 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:44:50,139 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:44:53,797 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:44:56,032 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:46:24,230 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 11:46:24,894 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:46:26,815 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:46:26,863 - faiss.loader - INFO - Loading faiss.
2025-07-26 11:46:26,886 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 11:46:26,889 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 11:46:29,862 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 11:46:29,862 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 11:46:33,446 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 11:46:47,894 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 11:46:48,573 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:46:48,635 - faiss.loader - INFO - Loading faiss.
2025-07-26 11:46:48,648 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 11:46:48,651 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 11:46:51,325 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 11:46:51,325 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 11:46:55,018 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 11:46:58,553 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 11:46:59,150 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:46:59,207 - faiss.loader - INFO - Loading faiss.
2025-07-26 11:46:59,219 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 11:46:59,222 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 11:47:01,668 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 11:47:01,668 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 11:47:05,896 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 11:47:08,422 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 11:47:09,059 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:47:09,119 - faiss.loader - INFO - Loading faiss.
2025-07-26 11:47:09,131 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 11:47:09,133 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 11:47:11,588 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 11:47:11,588 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 11:47:15,327 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 11:47:53,011 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 11:47:53,647 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:47:53,715 - faiss.loader - INFO - Loading faiss.
2025-07-26 11:47:53,728 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 11:47:53,731 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 11:47:56,477 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 11:47:56,477 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 11:48:01,224 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 11:48:07,791 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 11:48:08,442 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:48:08,501 - faiss.loader - INFO - Loading faiss.
2025-07-26 11:48:08,513 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 11:48:08,515 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 11:48:10,978 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 11:48:10,978 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 11:48:14,468 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 11:48:16,389 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 11:48:17,648 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:48:17,713 - faiss.loader - INFO - Loading faiss.
2025-07-26 11:48:17,734 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 11:48:17,737 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 11:48:20,436 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 11:48:20,436 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 11:48:24,751 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 11:48:48,740 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 103, in query_table
    cache_hit = semantic_cache.search(request.question, explain_flag=explain)
                                                                     ^^^^^^^
UnboundLocalError: cannot access local variable 'explain' where it is not associated with a value
2025-07-26 11:50:26,186 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 11:50:26,806 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:50:26,867 - faiss.loader - INFO - Loading faiss.
2025-07-26 11:50:26,879 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 11:50:26,882 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 11:50:29,730 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 11:50:29,730 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 11:50:33,882 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 11:50:34,591 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 11:50:34,653 - faiss.loader - INFO - Loading faiss.
2025-07-26 11:50:34,674 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 11:50:34,677 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 11:50:37,173 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 11:50:37,173 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 11:50:40,500 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 11:50:53,886 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM students;'
2025-07-26 11:51:00,872 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM students;\n\nExplanation:\n1. The question asks for all students, which implies we need to select all records from the students table.\n2. Since there are no relationships defined in the provided schema, we only need to query the students table.\n3. The SELECT statement is used to retrieve data from the table, and the asterisk (*) is used to select all columns. The FROM clause specifies the table from which we want to retrieve the data.'
2025-07-26 11:51:04,409 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:51:06,351 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:51:08,129 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:51:18,969 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM students ORDER BY age ASC;'
2025-07-26 11:51:22,967 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT * FROM students ORDER BY age ASC;\n\nExplanation:\n1. The question asks for all students, so we need to select all records from the students table.\n2. The question asks for the students in ascending order of age, so we need to add an ORDER BY clause with the 'age' column and the ASC keyword."
2025-07-26 11:51:27,365 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:51:28,611 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:57:59,979 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM students WHERE age < (SELECT MIN(age) FROM students);\n\nExplanation: To find a student who is younger than all other students, we first need to find the minimum age of all students. We do this by using a subquery to select the minimum age from the students table. Then, in the main query, we select all records where the age is less than the minimum age found in the subquery.'
2025-07-26 11:58:08,884 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:58:12,815 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM students WHERE age < (SELECT MIN(age) FROM students);'
2025-07-26 11:58:23,391 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:58:25,554 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:58:41,536 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:59:04,491 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM students WHERE age IN (SELECT age FROM students GROUP BY age HAVING COUNT(*) > 1);\n\nExplanation:\n1. To find all students with the same age, we first need to group students by their age using the GROUP BY clause.\n2. Then, we count the number of students for each age group using the COUNT(*) function and HAVING clause.\n3. Finally, we select all rows where the count is greater than 1, which means there are multiple students with the same age.'
2025-07-26 11:59:08,072 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM students WHERE age IN (SELECT age FROM students GROUP BY age HAVING COUNT(*) > 1);'
2025-07-26 11:59:10,345 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:59:12,930 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 11:59:14,702 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 12:00:03,261 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT teachers.name AS teacher_name, people.name AS person_name\nFROM teachers\nJOIN people;\n\nExplanation: To join two tables in SQLite, we use the JOIN keyword. In this case, we want to join the `teachers` and `people` tables, so we use a JOIN statement. Since we don't have any specific conditions for the join, we use an implicit join (also known as a cross join or cartesian product) by not specifying any join condition. We then alias the columns from each table using the AS keyword to avoid naming conflicts and make the results more readable. The resulting query will return all rows from both tables, with columns from the `teachers` table and the `people` table side by side."
2025-07-26 12:00:03,261 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 154, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:00:06,997 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT teachers.name AS teacher_name, people.name AS person_name FROM teachers INNER JOIN people;'
2025-07-26 12:00:14,757 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT teachers.name AS teacher_name, people.name AS person_name\nFROM teachers\nJOIN people;\n\nExplanation: To join two tables in SQLite, we use the JOIN keyword. In this case, we want to join the teachers and people tables, so we write a SQL query that selects columns from both tables and uses the JOIN keyword to combine the rows where the conditions match. Since there are no conditions specified in the question, we assume that we want all rows from both tables where there is a match, so we don't need a WHERE clause. We also alias the names of the columns from both tables to avoid confusion, as they have the same name (name). The resulting SQL query selects the name column from the teachers table and the name column from the people table, and joins the rows from both tables using the default INNER JOIN, which selects only the rows where there is a match in both tables."
2025-07-26 12:00:14,757 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 154, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:02:04,558 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 12:22:47,228 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:22:48,039 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:22:48,103 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:22:48,128 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:22:48,130 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:22:51,160 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:22:51,160 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:22:54,790 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:23:01,359 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:23:01,992 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:23:34,385 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:24:29,443 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:24:39,801 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:24:41,771 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:24:41,836 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:24:41,863 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:24:41,866 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:24:44,990 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:24:44,990 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:24:48,565 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:24:57,668 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:24:59,046 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:24:59,104 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:24:59,115 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:24:59,118 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:25:01,595 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:25:01,595 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:25:05,206 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:25:31,899 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT teachers.name, people.name\nFROM teachers\nJOIN people\nON teachers.id = people.id;\n\nExplanation: The question asks to join both tables. In SQLite, we use the JOIN keyword to combine rows from two or more tables based on a related column between them. Since there's no common column between the tables, we can't join them directly. However, if we assume that the id column in both tables is the same (which is not specified in the provided schema), we can join the tables on that id column. The SELECT statement selects the name column from both tables."
2025-07-26 12:25:31,900 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 160, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:25:48,228 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT teachers.name as teacher_name, people.name as person_name\nFROM teachers\nJOIN people\nON teachers.id = people.id;\n\nExplanation: The question asks to join the teachers and people tables. Since there is no relationship defined between the tables, we join them on their common column, which is the id. The SELECT statement retrieves the names from both tables, renaming them for clarity.'
2025-07-26 12:25:56,100 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT teachers.name AS teacher_name, people.name AS person_name, teachers.branch, people.dob\nFROM teachers\nJOIN people ON 1=1;'
2025-07-26 12:26:01,073 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 12:26:13,220 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT teachers.name AS teacher_name, people.name AS person_name\nFROM teachers\nJOIN people ON teachers.id = people.id;\n\nExplanation: The question asks to join the `teachers` and `people` tables by their common `id` column. To do this, we use the `JOIN` keyword in SQLite, specifying the `teachers` table as the left table and the `people` table as the right table. We then alias the `name` column from both tables to make it clear which name belongs to which table. The `ON` clause specifies the condition for the join, which is that the `id` values in both tables should match.'
2025-07-26 12:26:13,220 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 160, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:26:18,576 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT teachers.name AS teacher_name, people.name AS person_name, teachers.branch, people.dob\nFROM teachers\nJOIN people ON teachers.id = people.id;'
2025-07-26 12:26:22,976 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT teachers.name AS teacher_name, people.name AS person_name\nFROM teachers\nJOIN people ON teachers.id = people.id;\n\nExplanation: The user wants to join the `teachers` and `people` tables based on the common `id` column. To achieve this, we use the `JOIN` keyword in SQLite, and specify the `teachers` table as the left table, and the `people` table as the right table. We also alias the `name` column from both tables to make the result easier to read, and select both aliased `name` columns in the `SELECT` statement.'
2025-07-26 12:26:22,977 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 160, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:26:33,104 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 12:30:27,358 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:30:28,180 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:30:28,242 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:30:28,268 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:30:28,271 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:30:31,303 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:30:31,304 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:30:34,910 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:30:51,295 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:30:51,924 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:30:51,987 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:30:52,002 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:30:52,005 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:30:54,886 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:30:54,886 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:30:58,417 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:31:41,548 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:31:42,209 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:31:42,267 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:31:42,279 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:31:42,282 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:31:44,991 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:31:44,991 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:31:48,458 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:31:55,833 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:31:57,155 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:31:57,214 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:31:57,226 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:31:57,229 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:31:59,701 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:31:59,701 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:32:03,251 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:33:53,597 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:33:54,399 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:33:54,463 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:33:54,494 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:33:54,497 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:33:57,718 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:33:57,718 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:34:01,344 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:34:41,843 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;\n\nExplanation:\n1. Identify the table(s) involved in the question: In this case, the table is "products".\n2. Determine the columns to select: Since the question asks for all products, we need to select all columns. In SQLite, the asterisk (*) is used to select all columns.\n3. Determine the condition: Since there is no condition specified in the question, we will not include a WHERE clause.\n4. Write the SQL query: The SQL query is SELECT * FROM products. This query will return all rows and all columns from the "products" table.'
2025-07-26 12:34:41,844 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 149, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:38:11,568 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:38:12,415 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:38:12,482 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:38:12,509 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:38:12,511 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:38:15,778 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:38:15,778 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:38:19,482 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:38:26,387 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;\n\nExplanation:\n1. The user\'s question is "show all products".\n2. To answer this question, we need to retrieve all records from the products table.\n3. Since there are no relationships defined, we can directly use the SELECT statement with an asterisk (*) to select all columns and FROM clause to specify the table name.\n4. The WHERE clause is not necessary since we don\'t have any filtering conditions.\n5. The ORDER BY clause is also not necessary since the question does not specify any sorting criteria.\n6. The query should return all records from the products table.\n\nThis query will return the following columns: id, name, and type for each record in the products table.\n\nNote: SQLite is case-insensitive, so you can use lowercase or uppercase keywords like SELECT, FROM, and * in your queries.'
2025-07-26 12:38:26,389 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 149, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:38:57,000 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT * FROM products;\n\nExplanation:\n1. Identify the table(s) involved: In this case, the table is 'products'.\n2. Determine the columns to select: Since the question asks for all records, we select all columns by using the asterisk (*).\n3. Formulate the SQL query: The SQL query to select all records from the 'products' table is 'SELECT * FROM products'."
2025-07-26 12:38:57,001 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 149, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:39:17,163 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT * FROM products;\n\nExplanation:\n1. The user's question is asking for all products in the table.\n2. Since there are no relationships defined, we only need to access the products table.\n3. To retrieve all records from the table, we use the SELECT statement with an asterisk (*) to select all columns.\n4. Finally, we specify the table name (products) and end the query with a semicolon (;) to indicate the end of the SQL statement."
2025-07-26 12:39:17,163 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 149, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:40:55,019 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:40:55,639 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:40:55,699 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:40:55,711 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:40:55,714 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:40:58,436 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:40:58,436 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:41:02,123 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:41:07,276 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:41:07,878 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:41:13,306 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:41:15,363 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:41:15,429 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:41:15,442 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:41:15,444 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:41:18,397 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:41:18,397 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:41:21,958 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:41:46,916 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:41:48,330 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:41:48,390 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:41:48,403 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:41:48,405 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:41:51,197 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:41:51,197 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:41:54,679 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:42:15,607 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;\n\nExplanation:\n1. The user wants to see all the data from the products table.\n2. To achieve this, we use the SELECT statement in SQLite.\n3. The asterisk (*) is used to select all columns from the table.\n4. The FROM keyword is used to specify the table from which we want to select data.\n5. The table in this case is products.\n6. Therefore, the SQL query is SELECT * FROM products.'
2025-07-26 12:42:15,609 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 161, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:43:52,725 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:43:53,366 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:44:14,127 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:44:25,277 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:44:34,970 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:44:35,034 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:44:35,058 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:44:35,061 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:44:38,214 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:44:38,214 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:44:41,959 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:44:42,702 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:44:42,760 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:44:42,772 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:44:42,775 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:44:45,069 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:44:45,069 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:44:48,963 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:45:07,247 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;\n\nExplanation:\n1. Identify the table(s) involved: In this case, the table is "products".\n2. Determine the columns to select: Since the user wants all data, we will select all columns using the asterisk (*).\n3. Determine the filter conditions: Since there are no conditions specified, we will not filter any rows.\n4. Write the SQL query: The SQL query is "SELECT * FROM products".'
2025-07-26 12:45:07,249 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 172, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:46:09,476 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:46:10,129 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:46:17,649 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:46:19,547 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:46:19,609 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:46:19,638 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:46:19,642 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:46:22,776 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:46:22,776 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:46:26,560 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:46:41,625 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:46:42,261 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:46:42,321 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:46:42,334 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:46:42,336 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:46:45,221 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:46:45,221 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:46:48,826 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:46:49,416 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:46:49,477 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:46:49,489 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:46:49,492 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:46:51,735 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:46:51,735 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:46:55,119 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:47:14,290 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM colleges;\n\nExplanation:\n1. The user\'s question is "show all colleges".\n2. To answer this question, we need to select all records from the "colleges" table.\n3. Since there are no relationships defined, we can simply use the SELECT statement with an asterisk (*) to select all columns and FROM clause to specify the table name.\n4. The WHERE clause is not necessary since the user does not specify any conditions.\n5. Finally, we end the query with a semicolon to indicate the end of the SQL statement.'
2025-07-26 12:47:14,290 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 173, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:48:00,990 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:48:01,627 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:49:02,855 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:49:07,593 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:49:07,652 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:49:07,679 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:49:07,683 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:49:10,878 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:49:10,879 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:49:15,564 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:49:16,072 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:49:16,145 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:49:16,158 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:49:16,161 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:49:18,436 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:49:18,436 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:49:21,825 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:49:34,683 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM users;\n\nExplanation:\n1. The question asks for all users, which means we want to retrieve all records from the `users` table.\n2. To do this, we use the `SELECT` statement in SQLite.\n3. The `*` symbol is used to select all columns from the `users` table.\n4. The `FROM` keyword is used to specify the table we want to select data from, in this case, the `users` table.\n5. The resulting SQL query is `SELECT * FROM users;`.'
2025-07-26 12:49:34,686 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) near "table": syntax error
[SQL: select all columns from the `users` table.
4. The `FROM` keyword is used to specify the table we want to select data from, in this case, the `users` table.
5. The resulting SQL query is `SELECT * FROM users;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-26 12:49:34,686 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: near "table": syntax error

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 108, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) near "table": syntax error
[SQL: select all columns from the `users` table.
4. The `FROM` keyword is used to specify the table we want to select data from, in this case, the `users` table.
5. The resulting SQL query is `SELECT * FROM users;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 190, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 114, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) near "table": syntax error
[SQL: select all columns from the `users` table.
4. The `FROM` keyword is used to specify the table we want to select data from, in this case, the `users` table.
5. The resulting SQL query is `SELECT * FROM users;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-26 12:51:06,240 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:51:06,894 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:51:16,586 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:51:18,488 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:51:18,548 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:51:18,576 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:51:18,578 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:51:21,630 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:51:21,630 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:51:25,336 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:51:25,337 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:51:28,087 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:51:28,145 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:51:28,157 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:51:28,161 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:51:30,456 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:51:30,457 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:51:33,649 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:51:52,063 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;\n\nExplanation:\n1. Identify the table(s) involved in the question: In this case, the table is "products".\n2. Determine the columns to be selected: Since the question asks for all products, we need to select all columns. In SQLite, the asterisk (*) is used to select all columns.\n3. Write the SQL query: The SQL query to select all records from the "products" table is "SELECT * FROM products".'
2025-07-26 12:51:52,064 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 181, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:53:18,127 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:53:18,756 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:53:18,817 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:53:18,829 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:53:18,832 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:53:21,608 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:53:21,609 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:53:25,301 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:53:41,007 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM products;\n\nExplanation:\n1. Identify the table(s) involved in the question: In this case, the table is "products".\n2. Determine the columns to select: Since the question asks for all products, we need to select all columns. In SQLite, the asterisk (*) is used to select all columns.\n3. Determine the condition: Since there is no condition specified in the question, we will not include a WHERE clause.\n4. Determine the order: The question does not specify an order, so we will not include an ORDER BY clause.\n5. Write the SQL query: The SQL query is SELECT * FROM products.'
2025-07-26 12:53:41,008 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 181, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:54:05,813 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:54:06,532 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:54:16,908 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:54:16,976 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:54:17,004 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:54:17,007 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:54:20,238 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:54:20,238 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:54:24,827 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:54:25,433 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:54:25,492 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:54:25,503 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:54:25,506 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:54:27,781 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:54:27,781 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:54:30,998 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:54:54,571 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM colleges;\n\nExplanation:\n1. Identify the table(s) involved in the question: In this case, the table is "colleges".\n2. Determine the desired data: Since the question asks for all data, we will select all columns (*) from the "colleges" table.\n3. Write the SQL query: The SQL query to retrieve all data from the "colleges" table is "SELECT * FROM colleges".'
2025-07-26 12:54:54,572 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 180, in query_table
    validate_sql(sql)
    ~~~~~~~~~~~~^^^^^
  File "/Applications/NL2SQL/app/routers/query.py", line 21, in validate_sql
    raise ValueError("Only SELECT queries are allowed.")
ValueError: Only SELECT queries are allowed.
2025-07-26 12:58:41,986 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 12:58:42,721 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:59:04,193 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:59:06,121 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:59:08,898 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:59:16,605 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:59:31,178 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 12:59:31,240 - faiss.loader - INFO - Loading faiss.
2025-07-26 12:59:31,269 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 12:59:31,272 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 12:59:34,412 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 12:59:34,412 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 12:59:38,016 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 12:59:54,463 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM colleges;\n\nExplanation:\n1. The question asks for all colleges, which means we want to retrieve all records from the "colleges" table.\n2. The "colleges" table contains three columns: id, name, and rank. Since the question does not specify any particular column, we use the asterisk (*) to select all columns.\n3. The SQL statement SELECT * FROM colleges will return all records from the "colleges" table, which corresponds to the user\'s question.'
2025-07-26 13:00:25,082 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT users.username, teachers.name\nFROM users\nJOIN teachers;\n\nExplanation: To join both tables, we use the SQL JOIN keyword. The FROM clause specifies the tables to join, and the SELECT clause specifies the columns to return from the joined tables. In this case, we are joining the users and teachers tables and returning the username from the users table and the name from the teachers table. Since there are no relationships defined between the tables, we can join them on their common column (id), but since no specific column is mentioned in the question, we assume that the user wants to see all records from both tables. If a specific column was mentioned in the question, we would join the tables on that column instead.'
2025-07-26 13:00:25,084 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) no such column: users.username
[SQL: SELECT users.username, teachers.name;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-26 13:00:25,084 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such column: users.username

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 79, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: users.username
[SQL: SELECT users.username, teachers.name;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 161, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) no such column: users.username
[SQL: SELECT users.username, teachers.name;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-26 13:00:42,104 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT users.username, teachers.name\nFROM users\nJOIN teachers ON users.id = teachers.id;\n\nExplanation:\n1. The question asks to join the `users` and `teachers` tables.\n2. To join the tables, we use the SQL JOIN keyword.\n3. Since the question does not specify any conditions for the join, we join the tables on their common column `id`.\n4. We select the `username` from the `users` table and the `name` from the `teachers` table.\n5. The resulting SQL query is:\n\n```\nSELECT users.username, teachers.name\nFROM users\nJOIN teachers ON users.id = teachers.id;'
2025-07-26 13:00:42,106 - app.routers.query - ERROR - Error executing SQL query: (sqlite3.OperationalError) no such column: users.username
[SQL: SELECT users.username, teachers.name;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-26 13:00:42,106 - app.routers.query - ERROR - Error processing query
Traceback (most recent call last):
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such column: users.username

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 79, in execute_sql_query
    result = db.execute(text(sql), params or {})
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py", line 2260, in _execute_internal
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Applications/NL2SQL/venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: users.username
[SQL: SELECT users.username, teachers.name;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/NL2SQL/app/routers/query.py", line 161, in query_table
    results = execute_sql_query(db, sql)
  File "/Applications/NL2SQL/app/routers/query.py", line 85, in execute_sql_query
    raise ValueError(f"Error executing query: {str(e)}")
ValueError: Error executing query: (sqlite3.OperationalError) no such column: users.username
[SQL: SELECT users.username, teachers.name;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-26 13:02:49,458 - root - INFO - NL2SQL Playground API is shutting down...
2025-07-26 13:02:50,194 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 13:02:52,695 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 13:02:56,148 - app.db.dynamic_models - INFO - Database initialized
2025-07-26 13:02:56,214 - faiss.loader - INFO - Loading faiss.
2025-07-26 13:02:56,242 - faiss.loader - INFO - Successfully loaded faiss.
2025-07-26 13:02:56,245 - faiss - INFO - Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
2025-07-26 13:02:59,341 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-07-26 13:02:59,341 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-07-26 13:03:02,965 - root - INFO - NL2SQL Playground API is starting up...
2025-07-26 13:03:20,214 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT users.username, teachers.name\nFROM users\nJOIN teachers ON users.id = teachers.id;\n\nExplanation:\n1. The question asks to join the `users` and `teachers` tables.\n2. To join the tables, we use the SQL JOIN keyword.\n3. The condition for joining the tables is that the `id` column in the `users` table should match the `id` column in the `teachers` table.\n4. Since we want to select the `username` from the `users` table and the `name` from the `teachers` table, we list these columns in the SELECT clause.\n5. The FROM clause lists the tables we are joining, and the ON clause specifies the condition for the join.\n6. The result is a table with rows that have matching `id` values from both the `users` and `teachers` tables, and the columns `username` and `name`.'
2025-07-26 13:03:25,149 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 13:03:26,868 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 13:03:48,230 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM students;\n\nExplanation:\n1. Identify the table(s) involved in the question: In this case, the table is students.\n2. Determine the columns to select: Since the question asks for all students, we select all columns (*) from the students table.\n3. No filtering or sorting is required, so the WHERE, GROUP BY, ORDER BY clauses are not needed.\n4. The SQL query is then constructed by selecting all columns from the students table.\n\nThe SQL query is: SELECT * FROM students;'
2025-07-26 13:04:08,915 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM students ORDER BY gpa DESC;\n\nExplanation:\n1. The question asks to display all students. This implies that we need to select all columns from the students table.\n2. The question does not specify any conditions, so we do not need to use WHERE clause.\n3. The question asks for the students in descending order of GPA. This implies that we need to sort the results by the gpa column in descending order. Therefore, we use the ORDER BY clause with the DESC keyword.'
2025-07-26 14:10:30,838 - app.routers.query - INFO - LLM RAW RESPONSE: 'SELECT * FROM people;\n\nExplanation:\n1. Identify the table(s) involved in the question: In this case, the table is people.\n2. Determine the columns to select: Since the question asks for all information, we select all columns (*) from the people table.\n3. No WHERE, GROUP BY, or HAVING clauses are needed as the question asks for all records.\n4. The SQL query is then constructed accordingly.'
2025-07-26 14:10:47,428 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT * FROM people ORDER BY id DESC;\n\nExplanation:\n1. The question asks for everyone, which means all records from the 'people' table.\n2. The question asks for the data in descending order by id, so we use the ORDER BY clause with the id column and the DESC keyword.\n3. Since there are no relationships specified, we don't need to join any other tables.\n4. The SELECT statement is used to retrieve data from the 'people' table, so we use the SELECT keyword followed by an asterisk (*) to select all columns.\n5. Finally, we have the FROM clause to specify the table we are selecting data from, which is 'people' in this case."
2025-07-26 14:10:59,951 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 14:17:18,022 - app.routers.query - INFO - LLM RAW RESPONSE: "SELECT * FROM students ORDER BY id DESC;\n\nExplanation:\n1. The question asks for everyone, which means we need to select all records from the students table.\n2. The question asks for the records in descending order, so we use the ORDER BY clause with the id column (since there's no specific column mentioned in the question, we use the id column as it's unique and should be present in every record).\n3. We use the DESC keyword to sort the results in descending order.\n4. Since there's no WHERE clause or any other conditions specified in the question, we don't include them in the query.\n5. The SELECT statement is used to select the data, and the * symbol is used to select all columns from the students table.\n6. The FROM clause is used to specify the table from which we want to select the data, in this case, the students table.\n7. The ORDER BY clause is used to sort the results in a specific order, in this case, by the id column in descending order."
2025-07-26 14:17:23,198 - app.routers.query - INFO - Semantic cache HIT for NL query
2025-07-26 15:05:18,952 - root - INFO - NL2SQL Playground API is shutting down...
